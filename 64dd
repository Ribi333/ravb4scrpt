    private void getInteractC2(double distance, boolean swung) {
        if (blocked) {
            boolean onGround = mc.thePlayer.onGround;
            BlockPos pos = mc.thePlayer.getPosition();
            mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(onGround));
        }
        if (interactTicks >= 3) {
            interactTicks = 0;
        }
        interactTicks++;
        if (firstCycle) {
            switch (interactTicks) {
                case 1:
                    blinking.set(true);
                    if (ModuleUtils.isBlocked) {
                        setSwapSlot();
                        swapped = true;
                    }
                    break;
                case 2:
                    if (swapped) {
                        setCurrentSlot();
                        swapped = false;
                    }
                    handleInteractAndAttack(distance, true, true, swung);
                    sendBlockPacket();
                    Reflection.setItemInUse(this.blockingClient = true);
                    //ScriptDefaults.client.print("block packet first cycle");
                    releasePackets(); // release
                    interactTicks = 0;
                    ++firstEdge;
                    if (firstEdge > 5) {
                        firstCycle = false;
                        firstEdge = 0;
                    }
                    break;
            }
        }
        else {
            switch (interactTicks) {
                case 1:
                    blinking.set(true);
                    if (ModuleUtils.isBlocked) {
                        setSwapSlot();
                        swapped = true;
                    }
                    break;
                case 2:
                    if (swapped) {
                        setCurrentSlot();
                        swapped = false;
                    }
                    handleInteractAndAttack(distance, true, true, swung);
                    sendBlockPacket();
                    Reflection.setItemInUse(this.blockingClient = true);
                    //ScriptDefaults.client.print("block packet second cycle");
                    releasePackets(); // release
                    break;
                case 3:
                    firstCycle = true;
                    interactTicks = 0;
                    break;
            }
        }
    }
